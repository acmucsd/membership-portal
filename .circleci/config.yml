version: 2

jobs:
  build:
    docker:
      - image: circleci/node:14.17.6
    steps:
      - checkout
      - run:
          command: npm ci
      - run:
          command: npm run build
  lint:
    docker:
      - image: circleci/node:14.17.6
    steps:
      - checkout
      - restore_cache:
          key: package-cache-{{ checksum "package-lock.json" }}
      - run:
          command: npm install
      - save_cache:
          key: package-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          command: npm run lint
  test:
    docker:
      - image: circleci/node:14.17.6
        environment:
          RDS_HOST: localhost
          RDS_DATABASE: membership_portal
          RDS_USER: acmucsd_ci
          RDS_PASSWORD: password
      - image: circleci/postgres:11.5
        environment:
          POSTGRES_DB: membership_portal
          POSTGRES_USER: acmucsd_ci
          POSTGRES_PASSWORD: password
    steps:
      - checkout
      - restore_cache:
          key: package-cache-{{ checksum "package-lock.json" }}
      - run:
          command: npm install
      - save_cache:
          key: package-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          command: npm run db:migrate
      - run:
          command: npm run test
  image:
    working_directory: /app
    docker:
      - image: docker:20.10.2
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t app .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar app
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar
      - run:
          name: Push application Docker image
          command: |
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
            docker tag app "acmucsd/membership-portal-api:latest"
            docker push "acmucsd/membership-portal-api:latest"
  deploy:
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          command: |
            docker run caprover/cli-caprover:v2.1.1 caprover deploy --caproverUrl https://captain.app.acmucsd.com --caproverPassword $CAPROVER_PASS --caproverApp membership-portal-api --imageName acmucsd/membership-portal-api:latest
            docker run caprover/cli-caprover:v2.1.1 caprover deploy --caproverUrl https://captain.app.acmucsd.com --caproverPassword $CAPROVER_PASS --caproverApp membership-portal-api-testing --imageName acmucsd/membership-portal-api:latest

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - build
      - lint
      - test
      - image:
          requires:
            - build
            - lint
            - test
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build
            - lint
            - test
            - image
          filters:
            branches:
              only: master
