version: 2

jobs:
  build:
    docker:
      - image: circleci/node:14.17.6
    steps:
      - checkout
      - run:
          command: yarn install --frozen-lockfile
      - run:
          command: yarn build
  lint:
    docker:
      - image: circleci/node:14.17.6
    steps:
      - checkout
      - restore_cache:
          key: package-cache-{{ checksum "yarn.lock" }}
      - run:
          command: yarn
      - save_cache:
          key: package-cache-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          command: yarn lint
  test:
    docker:
      - image: circleci/node:14.17.6
        environment:
          RDS_HOST: localhost
          RDS_DATABASE: membership_portal
          RDS_USER: acmucsd_ci
          RDS_PASSWORD: password
      - image: circleci/postgres:11.5
        environment:
          POSTGRES_DB: membership_portal
          POSTGRES_USER: acmucsd_ci
          POSTGRES_PASSWORD: password
    steps:
      - checkout
      - restore_cache:
          key: package-cache-{{ checksum "yarn.lock" }}
      - run:
          command: yarn
      - save_cache:
          key: package-cache-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          command: yarn db:migrate
      - run:
          command: yarn test
  image:
    environment:
      BUILDX_PLATFORMS: linux/amd64,linux/arm64
    working_directory: /app
    docker:
      - image: docker:20.10.2
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.2
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:
          name: Install buildx for building images for both amd64 and arm64 architectures
          # Script adapted from https://github.com/metcalfc/docker-circleci-example/blob/main/.circleci/config.yml
          command: |
            BUILDX_BINARY_URL="https://github.com/docker/buildx/releases/download/v0.10.4/buildx-v0.10.4.linux-amd64"
            curl --output docker-buildx \
              --silent --show-error --location --fail --retry 3 \
              "$BUILDX_BINARY_URL"
            mkdir -p ~/.docker/cli-plugins
            mv docker-buildx ~/.docker/cli-plugins/
            chmod a+x ~/.docker/cli-plugins/docker-buildx
            docker buildx install
            # Run binfmt
            docker run --rm --privileged tonistiigi/binfmt:latest --install "$BUILDX_PLATFORMS"
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t app .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar app
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar
      - run:
          name: Push application Docker image
          command: |
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
            docker buildx create --name multi_platform_builder --use
            docker buildx build --platform "$BUILDX_PLATFORMS" -t acmucsd/membership-portal-api:test-platform-latest --push ./app

  deploy:
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          command: |
            docker run caprover/cli-caprover:v2.1.1 caprover deploy --caproverUrl https://captain.testing.caprover.acmucsd.com --caproverPassword $CAPROVER_PASS --caproverApp membership-portal-api-testing --imageName acmucsd/membership-portal-api:test-platform-latest

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - build
      - lint
      - test
      - image:
          requires:
            - build
            - lint
            - test
          filters:
            branches:
              only: shravan/docker-multi-platform-builds
      - deploy:
          requires:
            - build
            - lint
            - test
            - image
          filters:
            branches:
              only: shravan/docker-multi-platform-builds
